"use strict";(self.webpackChunksvgo_dev=self.webpackChunksvgo_dev||[]).push([[7903],{3905:(e,t,n)=>{n.d(t,{Zo:()=>m,kt:()=>f});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var p=r.createContext({}),s=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},m=function(e){var t=s(e.components);return r.createElement(p.Provider,{value:t},e.children)},u="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,p=e.parentName,m=l(e,["components","mdxType","originalType","parentName"]),u=s(n),d=o,f=u["".concat(p,".").concat(d)]||u[d]||c[d]||a;return n?r.createElement(f,i(i({ref:t},m),{},{components:n})):r.createElement(f,i({ref:t},m))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=d;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l[u]="string"==typeof e?e:o,i[1]=l;for(var s=2;s<a;s++)i[s]=n[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},8078:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>m,contentTitle:()=>p,default:()=>h,frontMatter:()=>l,metadata:()=>s,toc:()=>u});var r=n(7462),o=n(3366),a=(n(7294),n(3905)),i=["components"],l={title:"Remove XLink",svgo:{pluginId:"removeXlink",parameters:{includeLegacy:{description:"If to update references to XLink in elements that don't support the SVG 2 href attribute, like <code>&lt;filter&gt;</code> and <code>&lt;tref&gt;</code>.",default:!1}}}},p=void 0,s={unversionedId:"plugins/remove-xlink",id:"plugins/remove-xlink",title:"Remove XLink",description:"Removes XLink namespace prefixes and converts references to XLink attributes to the native SVG equivalent by performing the following operations:",source:"@site/.svgo/docs/03-plugins/remove-xlink.mdx",sourceDirName:"03-plugins",slug:"/plugins/remove-xlink",permalink:"/docs/plugins/remove-xlink",draft:!1,editUrl:"https://github.com/svg/svgo/tree/main/docs/03-plugins/remove-xlink.mdx",tags:[],version:"current",frontMatter:{title:"Remove XLink",svgo:{pluginId:"removeXlink",parameters:{includeLegacy:{description:"If to update references to XLink in elements that don't support the SVG 2 href attribute, like <code>&lt;filter&gt;</code> and <code>&lt;tref&gt;</code>.",default:!1}}}},sidebar:"docsSidebar",previous:{title:"Remove ViewBox",permalink:"/docs/plugins/remove-viewbox"},next:{title:"Remove XML Declaration",permalink:"/docs/plugins/remove-xml-proc-inst"}},m={},u=[{value:"Usage",id:"usage",level:2},{value:"Parameters",id:"parameters",level:3},{value:"Demo",id:"demo",level:2},{value:"Implementation",id:"implementation",level:2}],c=function(e){return function(t){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,a.kt)("div",t)}},d=c("PluginUsage"),f=c("PluginParams"),k=c("PluginDemo"),v={toc:u},g="wrapper";function h(e){var t=e.components,n=(0,o.Z)(e,i);return(0,a.kt)(g,(0,r.Z)({},v,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Removes XLink namespace prefixes and converts references to XLink attributes to the native SVG equivalent by performing the following operations:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Convert ",(0,a.kt)("inlineCode",{parentName:"li"},"*:href")," to ",(0,a.kt)("a",{parentName:"li",href:"https://developer.mozilla.org/docs/Web/SVG/Attribute/href"},(0,a.kt)("inlineCode",{parentName:"a"},"href")),"."),(0,a.kt)("li",{parentName:"ul"},"Convert ",(0,a.kt)("inlineCode",{parentName:"li"},"*:show")," to ",(0,a.kt)("a",{parentName:"li",href:"https://developer.mozilla.org/docs/Web/SVG/Attribute/target"},(0,a.kt)("inlineCode",{parentName:"a"},"target")),"."),(0,a.kt)("li",{parentName:"ul"},"Convert ",(0,a.kt)("inlineCode",{parentName:"li"},"*:title")," to ",(0,a.kt)("a",{parentName:"li",href:"https://developer.mozilla.org/docs/Web/SVG/Element/title"},(0,a.kt)("inlineCode",{parentName:"a"},"<title>")),"."),(0,a.kt)("li",{parentName:"ul"},"Drop all other references to the XLink namespace."),(0,a.kt)("li",{parentName:"ul"},"Remove XLink namespace declarations.")),(0,a.kt)("p",null,"In most cases this will remove all references to XLink, but if legacy elements that are deprecated or removed in SVG 2 are found, the references are preserved as those elements do not support the SVG 2 ",(0,a.kt)("inlineCode",{parentName:"p"},"href")," attribute. You can set ",(0,a.kt)("inlineCode",{parentName:"p"},"includeLegacy")," to ",(0,a.kt)("inlineCode",{parentName:"p"},"true")," to apply the plugin in this case too."),(0,a.kt)("p",null,"The following support ",(0,a.kt)("inlineCode",{parentName:"p"},"xlink:href")," but not the SVG 2 ",(0,a.kt)("inlineCode",{parentName:"p"},"href")," attribute:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://developer.mozilla.org/docs/Web/SVG/Element/cursor"},(0,a.kt)("inlineCode",{parentName:"a"},"<cursor>"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://developer.mozilla.org/docs/Web/SVG/Element/filter"},(0,a.kt)("inlineCode",{parentName:"a"},"<filter>"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://developer.mozilla.org/docs/Web/SVG/Element/font-face-uri"},(0,a.kt)("inlineCode",{parentName:"a"},"<font-face-uri>"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://developer.mozilla.org/docs/Web/SVG/Element/glyphRef"},(0,a.kt)("inlineCode",{parentName:"a"},"<glyphRef>"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://developer.mozilla.org/docs/Web/SVG/Element/tref"},(0,a.kt)("inlineCode",{parentName:"a"},"<tref>")))),(0,a.kt)("p",null,"It's recommended to use this plugin if you intend to inline SVGs into an HTML document, the ",(0,a.kt)("inlineCode",{parentName:"p"},"includeLegacy")," can be safely used in this case too. HTML does not support explicit namespaces, so namespace prefixes are ignored by the browser anyway."),(0,a.kt)("admonition",{type:"danger"},(0,a.kt)("p",{parentName:"admonition"},"This replaces XLink with features that are only supported in the SVGO 2 spec, and so breaks compatibility with the SVG 1.1.")),(0,a.kt)("h2",{id:"usage"},"Usage"),(0,a.kt)(d,{mdxType:"PluginUsage"}),(0,a.kt)("h3",{id:"parameters"},"Parameters"),(0,a.kt)(f,{mdxType:"PluginParams"}),(0,a.kt)("h2",{id:"demo"},"Demo"),(0,a.kt)(k,{mdxType:"PluginDemo"}),(0,a.kt)("h2",{id:"implementation"},"Implementation"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/svg/svgo/blob/main/plugins/removeXlink.js"},"https://github.com/svg/svgo/blob/main/plugins/removeXlink.js"))))}h.isMDXComponent=!0}}]);