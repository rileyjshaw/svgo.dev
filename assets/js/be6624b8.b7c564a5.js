"use strict";(self.webpackChunksvgo_dev=self.webpackChunksvgo_dev||[]).push([[3045],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>v});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=r.createContext({}),p=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},c=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),u=p(n),m=o,v=u["".concat(s,".").concat(m)]||u[m]||d[m]||a;return n?r.createElement(v,l(l({ref:t},c),{},{components:n})):r.createElement(v,l({ref:t},c))}));function v(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,l=new Array(a);l[0]=m;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i[u]="string"==typeof e?e:o,l[1]=i;for(var p=2;p<a;p++)l[p]=n[p];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},5823:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>b,frontMatter:()=>i,metadata:()=>p,toc:()=>u});var r=n(7462),o=n(3366),a=(n(7294),n(3905)),l=["components"],i={title:"Convert Shape to Path",svgo:{pluginId:"convertShapeToPath",defaultPlugin:!0,parameters:{convertArcs:{description:"If to convert <code>&lt;circle&gt;</code> and <code>&lt;ellipse&gt;</code> elements to paths.",default:!1},floatPrecision:{description:"Number of decimal places to round to, using conventional rounding rules.",default:null}}}},s=void 0,p={unversionedId:"plugins/convert-shape-to-path",id:"plugins/convert-shape-to-path",title:"Convert Shape to Path",description:"Convert basic shapes to `` elements.",source:"@site/.svgo/docs/03-plugins/convert-shape-to-path.mdx",sourceDirName:"03-plugins",slug:"/plugins/convert-shape-to-path",permalink:"/docs/plugins/convert-shape-to-path",draft:!1,editUrl:"https://github.com/svg/svgo/tree/main/docs/03-plugins/convert-shape-to-path.mdx",tags:[],version:"current",frontMatter:{title:"Convert Shape to Path",svgo:{pluginId:"convertShapeToPath",defaultPlugin:!0,parameters:{convertArcs:{description:"If to convert <code>&lt;circle&gt;</code> and <code>&lt;ellipse&gt;</code> elements to paths.",default:!1},floatPrecision:{description:"Number of decimal places to round to, using conventional rounding rules.",default:null}}}},sidebar:"docsSidebar",previous:{title:"Convert Path Commands",permalink:"/docs/plugins/convert-path-data"},next:{title:"Convert Style to Attributes",permalink:"/docs/plugins/convert-style-to-attrs"}},c={},u=[{value:"Usage",id:"usage",level:2},{value:"Parameters",id:"parameters",level:3},{value:"Demo",id:"demo",level:2},{value:"Implementation",id:"implementation",level:2}],d=function(e){return function(t){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,a.kt)("div",t)}},m=d("PluginUsage"),v=d("PluginParams"),g=d("PluginDemo"),f={toc:u},h="wrapper";function b(e){var t=e.components,n=(0,o.Z)(e,l);return(0,a.kt)(h,(0,r.Z)({},f,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Convert basic shapes to ",(0,a.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/docs/Web/SVG/Element/path"},(0,a.kt)("inlineCode",{parentName:"a"},"<path>"))," elements."),(0,a.kt)("h2",{id:"usage"},"Usage"),(0,a.kt)(m,{mdxType:"PluginUsage"}),(0,a.kt)("h3",{id:"parameters"},"Parameters"),(0,a.kt)(v,{mdxType:"PluginParams"}),(0,a.kt)("h2",{id:"demo"},"Demo"),(0,a.kt)(g,{mdxType:"PluginDemo"}),(0,a.kt)("h2",{id:"implementation"},"Implementation"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/svg/svgo/blob/main/plugins/convertShapeToPath.js"},"https://github.com/svg/svgo/blob/main/plugins/convertShapeToPath.js"))))}b.isMDXComponent=!0}}]);