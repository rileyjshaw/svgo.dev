"use strict";(self.webpackChunksvgo_dev=self.webpackChunksvgo_dev||[]).push([[9978],{3905:(e,n,t)=>{t.d(n,{Zo:()=>c,kt:()=>f});var r=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var p=r.createContext({}),s=function(e){var n=r.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},c=function(e){var n=s(e.components);return r.createElement(p.Provider,{value:n},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,i=e.originalType,p=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=s(t),m=o,f=u["".concat(p,".").concat(m)]||u[m]||d[m]||i;return t?r.createElement(f,a(a({ref:n},c),{},{components:t})):r.createElement(f,a({ref:n},c))}));function f(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var i=t.length,a=new Array(i);a[0]=m;var l={};for(var p in n)hasOwnProperty.call(n,p)&&(l[p]=n[p]);l.originalType=e,l[u]="string"==typeof e?e:o,a[1]=l;for(var s=2;s<i;s++)a[s]=t[s];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},9028:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>p,default:()=>f,frontMatter:()=>l,metadata:()=>s,toc:()=>u});var r=t(7462),o=t(3366),i=(t(7294),t(3905)),a=["components"],l={title:"Plugin Architecture"},p=void 0,s={unversionedId:"plugins-api",id:"plugins-api",title:"Plugin Architecture",description:"SVGO is primarily an optimizer, and is evolving as the community continue to propose or implement better optimizations.",source:"@site/.svgo/docs/04-plugins-api.mdx",sourceDirName:".",slug:"/plugins-api",permalink:"/docs/plugins-api",draft:!1,editUrl:"https://github.com/svg/svgo/tree/main/docs/04-plugins-api.mdx",tags:[],version:"current",sidebarPosition:4,frontMatter:{title:"Plugin Architecture"},sidebar:"docsSidebar",previous:{title:"Sort Defs Children",permalink:"/docs/plugins/sort-defs-children"}},c={},u=[{value:"Common Operations",id:"common-operations",level:2}],d={toc:u},m="wrapper";function f(e){var n=e.components,t=(0,o.Z)(e,a);return(0,i.kt)(m,(0,r.Z)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"SVGO is primarily an optimizer, and is evolving as the community continue to propose or implement better optimizations."),(0,i.kt)("p",null,"Since SVGO v2, our plugins API use the ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/syntax-tree/xast"},"xast")," specification, and the more practical visitor pattern."),(0,i.kt)("p",null,"A minimal plugin looks like this:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"export const myPlugin = {\n  name: 'myPlugin',\n  description: 'A plugin that does nothing.',\n  fn: () => {}\n}\n")),(0,i.kt)("p",null,"It currently does nothing, but can still be referenced in your ",(0,i.kt)("inlineCode",{parentName:"p"},"svgo.config.js"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"import { myPlugin } from './myPlugin.js';\n\nexport default {\n  plugins: [\n    myPlugin\n  ]\n}\n")),(0,i.kt)("p",null,"The visitor pattern lets you to access nodes as the parser enters and exits them, in the order that the respective tag appears."),(0,i.kt)("p",null,"The following JavaScript shows all of the types of nodes you can implement a callback for, which all callbacks are optional."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"const myPlugin = {\n  name: 'pluginName',\n  description: 'A plugin that does a lot of nothing.',\n  fn: () => {\n    return {\n      root: {\n        enter: (node) => {},\n        exit: (node) => {}\n      },\n      element: {\n        enter: (node, parentNode) => {},\n        exit: (node, parentNode) => {}\n      },\n      doctype: {\n        enter: (node, parentNode) => {},\n        exit: (node, parentNode) => {}\n      },\n      instruction: {\n        enter: (node, parentNode) => {},\n        exit: (node, parentNode) => {}\n      },\n      comment: {\n        enter: (node, parentNode) => {},\n        exit: (node, parentNode) => {}\n      },\n      cdata: {\n        enter: (node, parentNode) => {},\n        exit: (node, parentNode) => {}\n      },\n      text: {\n        enter: (node, parentNode) => {},\n        exit: (node, parentNode) => {}\n      }\n    }\n  }\n}\n")),(0,i.kt)("p",null,"Where a parent node is present, it will always be a direct child of the current node."),(0,i.kt)("h2",{id:"common-operations"},"Common Operations"),(0,i.kt)("p",null,"Finding specific nodes to modify their attributes:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"const myPlugin = {\n  name: 'makeEverythingPink',\n  description: 'Change all fill attribute values to pink.',\n  fn: () => {\n    return {\n      element: {\n        enter: (node, parentNode) => {\n          if (node.attributes.fill == null) {\n            return;\n          }\n\n          node.attributes.fill = 'pink';\n        }\n      }\n    }\n  }\n}\n")),(0,i.kt)("p",null,"Remove a node from its parent:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"const removeNoAttributes = {\n  name: 'removeNoAttributes',\n  description: 'Removes nodes with no attributes.',\n  fn: () => {\n    return {\n      element: {\n        enter: (node, parentNode) => {\n          if (Object.keys(node.attributes).length !== 0) {\n            return;\n          }\n\n          parentNode.children = parentNode.children.filter(\n            (child) => child !== node\n          );\n        }\n      }\n    }\n  }\n}\n")))}f.isMDXComponent=!0}}]);